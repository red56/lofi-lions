version: 2
jobs:
  build:
    parallelism: 1
    docker:
    - image: circleci/ruby:2.3.4-node-browsers
      environment:
        BUNDLE_JOBS: 3
        BUNDLE_RETRY: 3
        BUNDLE_PATH: vendor/bundle
        PGHOST: 127.0.0.1
        PGUSER: lofilions-user
        RAILS_ENV: test
        TZ: "Europe/London"
    - image: circleci/postgres:9.5-alpine
      environment:
        POSTGRES_USER: lofilions-user
        POSTGRES_DB: lofilions_test
        POSTGRES_PASSWORD: ""
    steps:
    - checkout

      # Which version of bundler?
    - run:
        name: Which bundler?
        command: bundle -v

      # Restore bundle cache
    - restore_cache:
        keys:
        - lofilions-bundle-v1-{{ checksum "Gemfile.lock" }}
        - lofilions-bundle-v1-

    - run:
        name: Bundle Install
        command: bundle check || bundle install

      # Store bundle cache
    - save_cache:
        key: lofilions-bundle-v1-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
#    - restore_cache:
#        keys:
#        - lofilions-yarn-{{ checksum "yarn.lock" }}
#        - lofilions-yarn-

#    - run:
#        name: Yarn Install
#        command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
#    - save_cache:
#        key: lofilions-yarn-{{ checksum "yarn.lock" }}
#        paths:
#        - ~/.cache/yarn

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m

    - run:
        name: Database setup
        command: |
          cp config/database.circle.yml config/database.yml

      # Run rspec in parallel
    - run:
        name: Run rspec in parallel
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
    - store_test_results:
        path: test_results

    - store_artifacts:
        path: /tmp/test-results
        destination: test-results
